---
import { Menu, X, AlertTriangle } from 'lucide-astro';
import ThemeToggle from './ThemeToggle.astro';

// Toggle this to show/hide the under construction banner
const SHOW_UNDER_CONSTRUCTION = true;

const currentPath = Astro.url.pathname;

const navItems = [
  { label: 'About', href: '/about' },
  { label: 'Blog', href: '/blog' },
  { label: 'CV', href: '/cv' },
  { label: 'Projects', href: '/projects' },
];
---

<div class="sticky top-0 z-50 w-full">
  <header class="border-b border-gray-200 dark:border-gray-800 bg-white/95 dark:bg-gray-900/95 backdrop-blur supports-[backdrop-filter]:bg-white/60 dark:supports-[backdrop-filter]:bg-gray-900/60">
    <nav class="container flex h-16 items-center gap-6">
      <a href="/" class="font-bold text-xl hover:text-blue-600 transition-colors flex-shrink-0">
        o10s
      </a>
      
      {SHOW_UNDER_CONSTRUCTION && (
        <div class="hidden sm:flex items-center gap-2 text-red-600 dark:text-red-500 font-bold text-sm animate-pulse">
          <AlertTriangle class="h-4 w-4" />
          <span>UNDER CONSTRUCTION - Content Not Final</span>
        </div>
      )}

      <div class="flex items-center gap-4 flex-shrink-0 ml-auto">
        <div class="hidden md:flex items-center gap-6">
          {navItems.map((item) => (
            <a
              href={item.href}
              class={`text-sm font-medium transition-colors hover:text-blue-600 ${
                currentPath === item.href
                  ? 'text-blue-600'
                  : 'text-gray-600 dark:text-gray-400'
              }`}
            >
              {item.label}
            </a>
          ))}
        </div>
        
        <ThemeToggle />

        <button
          id="mobile-menu-button"
          class="md:hidden p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800"
          aria-label="Toggle mobile menu"
        >
          <Menu class="h-5 w-5" />
        </button>
      </div>
    </nav>
  </header>

  {SHOW_UNDER_CONSTRUCTION && (
    <div class="sm:hidden bg-red-600 dark:bg-red-700 text-white px-4 py-2 text-center text-sm font-bold">
      <div class="flex items-center justify-center gap-2">
        <AlertTriangle class="h-4 w-4" />
        <span>UNDER CONSTRUCTION</span>
      </div>
    </div>
  )}
</div>

  <div
    id="mobile-menu"
    class="hidden md:hidden fixed inset-0 z-[100] bg-black bg-opacity-50"
  >
    <div class="fixed right-0 top-0 h-full w-full sm:w-80 bg-white dark:bg-gray-900 shadow-xl">
      <div class="flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-800">
        <span class="font-bold text-xl">Menu</span>
        <button
          id="mobile-menu-close"
          class="p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800"
          aria-label="Close mobile menu"
        >
          <X class="h-5 w-5" />
        </button>
      </div>
      
      <div class="flex flex-col p-6 gap-4 items-center justify-center flex-1">
        {navItems.map((item) => (
          <a
            href={item.href}
            class={`w-full max-w-xs px-6 py-4 rounded-lg text-lg font-medium transition-all text-center hover:bg-gray-100 dark:hover:bg-gray-800 hover:scale-105 ${
              currentPath === item.href
                ? 'bg-gray-100 dark:bg-gray-800 text-blue-600'
                : 'text-gray-700 dark:text-gray-300'
            }`}
          >
            {item.label}
          </a>
        ))}
      </div>
    </div>
  </div>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenuClose = document.getElementById('mobile-menu-close');
  const mobileMenu = document.getElementById('mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.remove('hidden');
  });

  mobileMenuClose?.addEventListener('click', () => {
    mobileMenu?.classList.add('hidden');
  });

  mobileMenu?.addEventListener('click', (e) => {
    if (e.target === mobileMenu) {
      mobileMenu.classList.add('hidden');
    }
  });
</script>