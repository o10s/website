---
import Layout from '../../layouts/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { Calendar, Clock, User, Tag, ArrowLeft } from 'lucide-astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
const { title, description, pubDate, updatedDate, author, tags } = post.data;

// Calculate reading time
const readingTime = Math.max(1, Math.ceil(post.body.split(/\s+/).length / 200));

// Format dates
const formattedPubDate = new Date(pubDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const formattedUpdateDate = updatedDate
  ? new Date(updatedDate).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
    })
  : null;
---

<Layout title={`${title} - Blog`} description={description}>
  <article class="container py-16 md:py-24 max-w-4xl mx-auto">
    <!-- Back to Blog Link -->
    <div class="mb-8">
      <a
        href="/blog"
        class="inline-flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
      >
        <ArrowLeft class="h-4 w-4" />
        Back to Blog
      </a>
    </div>
    
    <!-- Article Header -->
    <header class="mb-12">
      <h1 class="text-4xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-gray-100 leading-tight">
        {title}
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 mb-8 leading-relaxed">
        {description}
      </p>
      
      <!-- Meta Information -->
      <div class="flex flex-wrap items-center gap-4 text-sm text-gray-600 dark:text-gray-400 pb-6 border-b border-gray-200 dark:border-gray-800">
        <div class="flex items-center gap-1">
          <User class="h-4 w-4" />
          <span>{author}</span>
        </div>
        <div class="flex items-center gap-1">
          <Calendar class="h-4 w-4" />
          <time datetime={pubDate.toISOString()}>{formattedPubDate}</time>
        </div>
        {formattedUpdateDate && (
          <div class="flex items-center gap-1">
            <span>Updated:</span>
            <time datetime={updatedDate!.toISOString()}>{formattedUpdateDate}</time>
          </div>
        )}
        <div class="flex items-center gap-1">
          <Clock class="h-4 w-4" />
          <span>{readingTime} min read</span>
        </div>
      </div>
      
      <!-- Tags -->
      {tags.length > 0 && (
        <div class="flex items-center gap-2 mt-6">
          <Tag class="h-4 w-4 text-gray-500" />
          <div class="flex flex-wrap gap-2">
            {tags.map((tag) => (
              <span class="px-3 py-1 bg-gray-100 dark:bg-gray-800 rounded-full text-sm">
                {tag}
              </span>
            ))}
          </div>
        </div>
      )}
    </header>
    
    <!-- Article Content with Enhanced Markdown Styling -->
    <div class="blog-content">
      <Content />
    </div>
    
    <!-- Article Footer -->
    <footer class="mt-16 pt-8 border-t border-gray-200 dark:border-gray-800">
      <div class="flex justify-between items-center">
        <a
          href="/blog"
          class="text-blue-600 dark:text-blue-400 hover:underline"
        >
          ‚Üê Back to all posts
        </a>
        <div class="text-sm text-gray-600 dark:text-gray-400">
          Thanks for reading!
        </div>
      </div>
    </footer>
  </article>
</Layout>

<style>
  /* Enhanced Markdown Styling */
  .blog-content {
    color: rgb(17 24 39);
  }

  :global(.dark) .blog-content {
    color: rgb(243 244 246);
  }

  /* Headings */
  .blog-content :global(h1) {
    font-size: 2.25rem;
    font-weight: 700;
    margin-top: 3rem;
    margin-bottom: 1.5rem;
    color: rgb(17 24 39);
  }

  :global(.dark) .blog-content :global(h1) {
    color: rgb(243 244 246);
  }

  .blog-content :global(h2) {
    font-size: 1.875rem;
    font-weight: 700;
    margin-top: 2.5rem;
    margin-bottom: 1.25rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid rgb(229 231 235);
    color: rgb(17 24 39);
  }

  :global(.dark) .blog-content :global(h2) {
    color: rgb(243 244 246);
    border-bottom-color: rgb(31 41 55);
  }

  .blog-content :global(h3) {
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: rgb(17 24 39);
  }

  :global(.dark) .blog-content :global(h3) {
    color: rgb(243 244 246);
  }

  .blog-content :global(h4) {
    font-size: 1.25rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    color: rgb(17 24 39);
  }

  :global(.dark) .blog-content :global(h4) {
    color: rgb(243 244 246);
  }

  .blog-content :global(h5),
  .blog-content :global(h6) {
    font-size: 1.125rem;
    font-weight: 600;
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    color: rgb(17 24 39);
  }

  :global(.dark) .blog-content :global(h5),
  :global(.dark) .blog-content :global(h6) {
    color: rgb(243 244 246);
  }

  /* Paragraphs */
  .blog-content :global(p) {
    margin-bottom: 1.5rem;
    line-height: 1.75;
    font-size: 1.125rem;
  }

  /* Lists */
  .blog-content :global(ul) {
    list-style-type: disc;
    list-style-position: outside;
    margin-left: 1.5rem;
    margin-bottom: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .blog-content :global(ol) {
    list-style-type: decimal;
    list-style-position: outside;
    margin-left: 1.5rem;
    margin-bottom: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .blog-content :global(li) {
    line-height: 1.75;
    font-size: 1.125rem;
    padding-left: 0.5rem;
  }

  .blog-content :global(li > ul),
  .blog-content :global(li > ol) {
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
  }

  /* Links */
  .blog-content :global(a) {
    color: rgb(37 99 235);
    text-decoration: underline;
    transition: color 0.15s;
  }

  :global(.dark) .blog-content :global(a) {
    color: rgb(96 165 250);
  }

  .blog-content :global(a:hover) {
    color: rgb(30 64 175);
  }

  :global(.dark) .blog-content :global(a:hover) {
    color: rgb(147 197 253);
  }

  /* Strong and Emphasis */
  .blog-content :global(strong) {
    font-weight: 700;
    color: rgb(17 24 39);
  }

  :global(.dark) .blog-content :global(strong) {
    color: rgb(243 244 246);
  }

  .blog-content :global(em) {
    font-style: italic;
  }

  /* Blockquotes */
  .blog-content :global(blockquote) {
    border-left: 4px solid rgb(37 99 235);
    padding-left: 1.5rem;
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    font-style: italic;
    color: rgb(55 65 81);
    background-color: rgb(249 250 251);
    border-top-right-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;
  }

  :global(.dark) .blog-content :global(blockquote) {
    border-left-color: rgb(96 165 250);
    color: rgb(209 213 219);
    background-color: rgba(31, 41, 55, 0.5);
  }

  .blog-content :global(blockquote p) {
    margin-bottom: 0;
  }

  /* Code */
  .blog-content :global(code) {
    font-family: ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace;
    font-size: 0.875rem;
    background-color: rgb(243 244 246);
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
  }

  :global(.dark) .blog-content :global(code) {
    background-color: rgb(31 41 55);
  }

  .blog-content :global(pre) {
    background-color: rgb(17 24 39);
    color: rgb(243 244 246);
    border-radius: 0.5rem;
    padding: 1rem;
    overflow-x: auto;
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  }

  :global(.dark) .blog-content :global(pre) {
    background-color: rgb(3 7 18);
  }

  .blog-content :global(pre code) {
    background-color: transparent;
    padding: 0;
    font-size: 0.875rem;
    line-height: 1.5;
  }

  /* Tables */
  .blog-content :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
  }

  .blog-content :global(th) {
    background-color: rgb(243 244 246);
    font-weight: 600;
    text-align: left;
    padding: 0.75rem;
    border-bottom: 2px solid rgb(209 213 219);
  }

  :global(.dark) .blog-content :global(th) {
    background-color: rgb(31 41 55);
    border-bottom-color: rgb(55 65 81);
  }

  .blog-content :global(td) {
    padding: 0.75rem;
    border-bottom: 1px solid rgb(229 231 235);
  }

  :global(.dark) .blog-content :global(td) {
    border-bottom-color: rgb(31 41 55);
  }

  .blog-content :global(tr:hover) {
    background-color: rgb(249 250 251);
  }

  :global(.dark) .blog-content :global(tr:hover) {
    background-color: rgba(31, 41, 55, 0.5);
  }

  /* Horizontal Rules */
  .blog-content :global(hr) {
    border-color: rgb(209 213 219);
    margin-top: 2rem;
    margin-bottom: 2rem;
  }

  :global(.dark) .blog-content :global(hr) {
    border-color: rgb(55 65 81);
  }

  /* Images */
  .blog-content :global(img) {
    border-radius: 0.5rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    max-width: 100%;
    height: auto;
  }

  /* Definition Lists */
  .blog-content :global(dl) {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
  }

  .blog-content :global(dt) {
    font-weight: 600;
    color: rgb(17 24 39);
    margin-bottom: 0.25rem;
  }

  :global(.dark) .blog-content :global(dt) {
    color: rgb(243 244 246);
  }

  .blog-content :global(dd) {
    margin-left: 1.5rem;
    margin-bottom: 1rem;
    color: rgb(55 65 81);
  }

  :global(.dark) .blog-content :global(dd) {
    color: rgb(209 213 219);
  }

  /* Keyboard */
  .blog-content :global(kbd) {
    display: inline-block;
    padding: 0.125rem 0.5rem;
    font-family: ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace;
    font-size: 0.875rem;
    font-weight: 400;
    color: rgb(31 41 55);
    background-color: rgb(243 244 246);
    border: 1px solid rgb(209 213 219);
    border-radius: 0.25rem;
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  }

  :global(.dark) .blog-content :global(kbd) {
    color: rgb(229 231 235);
    background-color: rgb(31 41 55);
    border-color: rgb(55 65 81);
  }
</style>